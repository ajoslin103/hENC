bundle common henc_cfg
# configuration for bundle agent henc; edit the variables in this file
# to suit your needs
{
  vars:
    any::
      "basedir"
	  comment => "Base directory for the files referenced below",
	  string => "$(this.promise_dirname)/.." ;

      "testdir"
	  comment => "Directory to copy test files into",
	  string => "$(basedir)/test" ;

      "local_modules"
	  comment => "Local directory for modules",
	  string  => "$(testdir)" ;

      "master_modules"
	  comment => "Source directory for modules",
	  string  => "$(basedir)/module" ;

      "local_enc"
	  comment => "Local directory for caching ENC files",
	  string  => "$(testdir)" ;

      "master_enc"
	  comment => "Base directory for ENC files",
	  string  => "$(basedir)/module" ;


  classes:
    any::
      "global_class_to_be_cancelled_by_henc"
	  expression => "any" ;
}


########################################################################
# Bodies replicated from the standard library

body classes always(x)
# @brief Define class `x` no matter what the outcome of the promise is
# @param x The name of the class to be defined
{
      promise_repaired => { "$(x)" };
      promise_kept => { "$(x)" };
      repair_failed => { "$(x)" };
      repair_denied => { "$(x)" };
      repair_timeout => { "$(x)" };
}


########################################################################
# bodies replicated from henc_lib, but with digest_cp modified to copy
# files on the local filesystem

body copy_from digest_cp(from)
# digest copy from policy hub
{
      source      => "$(from)" ;
      compare     => "digest" ;
      copy_backup => "false" ;
}


body perms root_executable
# equivalent to mog("0755","root","root")
{
          owners => { "root" };
          groups => { "root" };
          mode   => "0755";
}


