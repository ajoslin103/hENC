body common control
{
      inputs => {
		  "module/enc.cf",
		  "lib/henc_cfg_test.cf",
      } ;

      version => "hENC-v0.0.1" ;

	  bundlesequence => { "henc_cfg", "henc_test" } ;
}

bundle agent henc_test
{
  vars:
    any::
      "enclist" slist => { "henc_set","henc_override" } ;

  classes:
    any::
      "pass_3_reached" expression => "pass_2_reached" ;
      "pass_2_reached" expression => "pass_1_reached" ;
      "pass_1_reached" expression => "any" ;

      "henc_test_scalar_ok"
	  expression => regcmp("hENC test","$(henc.test_scalar)") ;

      "all_tests_ok"
	  and => { "global_class_to_be_set_by_henc",
		   "!global_class_to_be_cancelled_by_henc",
		   "!global_class_to_be_lowered",
		   "henc_test_scalar_ok",
		   "henc_test_list_ok" } ;

    pass_2_reached::
      # must not evaluate before henc runs...
      "henc_test_list_ok"
	  comment => "list must not be set",
	  not => isvariable("henc.test_list") ;

  files:
    !pass_2_reached::
      # this must run only at pass 1, to prepare for the tests
      "$(henc_cfg.testdir)/."
	  comment => "Prepare test directory",
	  create => "yes" ;

      "$(henc_cfg.testdir)/$(enclist)" delete => tidy ;
      

  methods:
      "henc"
	  comment => "test ENC",
	  usebundle => henc("henc_test.enclist") ;

  reports:
    global_class_to_be_set_by_henc::
      "OK - global_class_to_be_set_by_henc found" ;

    !global_class_to_be_set_by_henc::
      "NOT OK - global_class_to_be_set_by_henc not found" ;

    global_class_to_be_cancelled_by_henc::
      "NOT OK - global_class_to_be_cancelled_by_henc found" ;

    !global_class_to_be_cancelled_by_henc::
      "OK - global_class_to_be_cancelled_by_henc not found" ;

    global_class_to_be_lowered::
      "NOT OK - global_class_to_be_lowered found" ;

    !global_class_to_be_lowered::
      "OK - global_class_to_be_lowered not found" ;

    pass_2_reached.henc_test_scalar_ok::
      "OK - test scalar has the expected value" ;

    pass_2_reached.!henc_test_scalar_ok::
      "NOT OK - test scalar has not the expected value" ;

    pass_2_reached.henc_test_list_ok::
      "OK - test list was slashed by henc" ;

    pass_2_reached.!henc_test_list_ok::
      "NOT OK - test list was not slashed by henc" ;

    pass_3_reached::
      "-----------------------------------------------" ;

    pass_3_reached.all_tests_ok::
      "FINAL RESULT: ALL TESTS SUCCESSFUL!" ;

    pass_3_reached.!all_tests_ok::
      "FINAL RESULT: Some tests failed :-(" ;
}